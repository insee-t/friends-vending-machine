@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
  font-family: 'Inter', sans-serif;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

a {
  color: inherit;
  text-decoration: none;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

/* Custom styles for the landing page */
.landing-container {
  min-height: 100vh;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  position: relative;
  overflow: hidden;
}

.floating-circle {
  position: absolute;
  border-radius: 50%;
  opacity: 0.7;
  animation: float 6s ease-in-out infinite;
}

.floating-circle:nth-child(1) {
  width: 120px;
  height: 120px;
  background: #a8e6cf;
  top: 10%;
  left: 10%;
  animation-delay: 0s;
}

.floating-circle:nth-child(2) {
  width: 80px;
  height: 80px;
  background: #d4a5a5;
  top: 20%;
  right: 15%;
  animation-delay: 2s;
}

.floating-circle:nth-child(3) {
  width: 100px;
  height: 100px;
  background: #b8a9c9;
  bottom: 20%;
  left: 20%;
  animation-delay: 4s;
}

.floating-circle:nth-child(4) {
  width: 60px;
  height: 60px;
  background: #a8e6cf;
  bottom: 30%;
  right: 25%;
  animation-delay: 1s;
}

.floating-circle:nth-child(5) {
  width: 90px;
  height: 90px;
  background: #d4a5a5;
  top: 50%;
  left: 5%;
  animation-delay: 3s;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}

.main-panel {
  background: white;
  border-radius: 24px;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px);
}

.speech-bubble {
  background: white;
  border-radius: 16px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  position: relative;
}

.speech-bubble::after {
  content: '';
  position: absolute;
  bottom: -8px;
  left: 50%;
  transform: translateX(-50%);
  width: 0;
  height: 0;
  border-left: 8px solid transparent;
  border-right: 8px solid transparent;
  border-top: 8px solid white;
}

.start-button {
  background: linear-gradient(135deg, #ffd700, #ffed4e);
  border: none;
  border-radius: 25px;
  box-shadow: 0 8px 16px rgba(255, 215, 0, 0.3);
  transition: all 0.3s ease;
}

.start-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 12px 24px rgba(255, 215, 0, 0.4);
}

.how-to-button {
  background: white;
  border: 2px solid #e5e7eb;
  border-radius: 25px;
  transition: all 0.3s ease;
}

.how-to-button:hover {
  border-color: #9ca3af;
  transform: translateY(-2px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
}

.confetti {
  animation: confetti-fall 3s ease-in-out infinite;
}

@keyframes confetti-fall {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  50% {
    transform: translateY(-10px) rotate(180deg);
  }
}

.wave-hand {
  animation: wave 2s ease-in-out infinite;
}

@keyframes wave {
  0%, 100% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(20deg);
  }
  75% {
    transform: rotate(-20deg);
  }
}

.rocket-icon {
  animation: rocket-bounce 2s ease-in-out infinite;
}

@keyframes rocket-bounce {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-5px);
  }
}

/* Simple Pairing Game Styles */
.simple-game-container {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  min-height: 100vh;
  position: relative;
  overflow: hidden;
}

.simple-game-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%);
  pointer-events: none;
}

/* Form Styles */
input, select {
  transition: all 0.3s ease;
}

input:focus, select:focus {
  transform: translateY(-2px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
}

/* Button Hover Effects */
button {
  transition: all 0.3s ease;
}

button:hover {
  transform: translateY(-2px);
}

/* Animation for pairing results */
@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.pair-result {
  animation: slideInUp 0.6s ease-out;
}

/* Pulse animation for compatibility score */
@keyframes pulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

.compatibility-score {
  animation: pulse 2s ease-in-out infinite;
}

/* Floating hearts animation */
@keyframes floatHearts {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  25% {
    transform: translateY(-10px) rotate(5deg);
  }
  50% {
    transform: translateY(-20px) rotate(0deg);
  }
  75% {
    transform: translateY(-10px) rotate(-5deg);
  }
}

.floating-hearts {
  animation: floatHearts 3s ease-in-out infinite;
}

/* Fade in animation for activity screen */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fadeIn {
  animation: fadeIn 0.6s ease-out;
}

/* Enhanced button animations */
@keyframes buttonPulse {
  0%, 100% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
  }
  50% {
    box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
  }
}

.button-pulse {
  animation: buttonPulse 2s infinite;
}

/* Smooth transitions for all interactive elements */
* {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Enhanced focus states */
input:focus, textarea:focus, button:focus {
  outline: none;
  ring: 4px;
  ring-opacity: 0.2;
}

/* Improved text selection */
::selection {
  background-color: rgba(59, 130, 246, 0.2);
  color: inherit;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .simple-game-container {
    padding: 1rem;
  }
  
  .text-4xl {
    font-size: 2rem;
  }
  
  .text-5xl {
    font-size: 2.5rem;
  }
}

